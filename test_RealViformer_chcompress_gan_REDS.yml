# GENERATE TIME: Tue Feb 21 12:26:26 2023
# CMD:
# basicsr/train.py --local_rank=0 -opt options/train/RealTransformer/train_RealTransformer_chcompress_masked_mergemask_gan_REDS.yml --launcher pytorch

# general settings
name: RealTransformer_chcompress_sq4_masked_mergemask_ssim_gan_REDS
model_type: VideoRecurrentGANModel
scale: 4
num_gpu: 4  # official: 8 GPUs
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: REDS
    type: BlindREDSRecurrentDataset
    dataroot_gt: datasets/REDS/train_sharp_sub #train_sharp_with_val.lmdb
    dataroot_lq: datasets/REDS/train_sharp_bicubic/X4_sub #train_sharp_bicubic_with_val.lmdb
    meta_info_file: basicsr/data/meta_info/meta_info_REDS_sub_GT.txt
    val_partition: REDS4  # set to 'official' when use the official validation partition
    test_mode: False
    io_backend:
      type: disk

    num_frame: 15
    gt_size: 256
    interval_list: [1]
    random_reverse: false
    pipeline:
      - {type: FixedCrop, keys: ['gt'], crop_size: [256,256]}
      - {type: Flip, keys: ['gt'], flip_ratio: 0.5, direction: horizontal}
      - {type: Flip, keys: ['gt'], flip_ratio: 0.5, direction: vertical}
      - {type: RandomTransposeHW, keys: ['gt'], transpose_ratio: 0.5}
      # - {type: MirrorSequence, keys: ['gt']}
      - {type: UnsharpMasking, keys: ['gt'], kernel_size: 51, sigma: 0, weight: 0.5, threshold: 10}
      - {type: CopyValues, src_keys: ['gt_unsharp'], dst_keys: ['lq'] }
      - {type: RandomBlur, params: {
            kernel_size: [7, 9, 11, 13, 15, 17, 19, 21],
            kernel_list: [
                'iso', 'aniso', 'generalized_iso', 'generalized_aniso',
                'plateau_iso', 'plateau_aniso', 'sinc'
            ],
            kernel_prob: [0.405, 0.225, 0.108, 0.027, 0.108, 0.027, 0.1],
            sigma_x: [0.2, 3],
            sigma_y: [0.2, 3],
            rotate_angle: [-3.1416, 3.1416],
            beta_gaussian: [0.5, 4],
            beta_plateau: [1, 2],
            sigma_x_step: 0.02,
            sigma_y_step: 0.02,
            rotate_angle_step: 0.31416,
            beta_gaussian_step: 0.05,
            beta_plateau_step: 0.1,
            omega_step: 0.0628},
          keys: ['lq'],
        }
      - {type: RandomResize, params: {
            resize_mode_prob: [0.2, 0.7, 0.1],  # up, down, keep
            resize_scale: [0.15, 1.5],
            resize_opt: ['bilinear', 'area', 'bicubic'],
            resize_prob: [ 1/3, 1/3, 1/3],
            resize_step: 0.015,
            is_size_even: True
          },
          keys: ['lq']
        }
      - {type: RandomNoise, params: {
            noise_type: ['gaussian', 'poisson'],
            noise_prob: [0.5, 0.5],
            gaussian_sigma: [1, 30],
            gaussian_gray_noise_prob: 0.4,
            poisson_scale: [0.05, 3],
            poisson_gray_noise_prob: 0.4,
            gaussian_sigma_step: 0.1,
            poisson_scale_step: 0.005
          },
        keys: ['lq']
        }
      - {type: RandomJPEGCompression, params: {quality: [30,95], quality_step: 3}, keys: ['lq']}
      - {type: RandomVideoCompression, params: {
            codec: ['libx264', 'h264', 'mpeg4'],
            codec_prob: [1/3, 1/3, 1/3],
            bitrate: [!!float 1e4, !!float 1e5]
          },
        keys: ['lq']
        }
      - {type: RandomBlur, params: {
            prob: 0.8,
            kernel_size: [7, 9, 11, 13, 15, 17, 19, 21],
            kernel_list: [
                'iso', 'aniso', 'generalized_iso', 'generalized_aniso',
                'plateau_iso', 'plateau_aniso', 'sinc'
            ],
            kernel_prob: [0.405, 0.225, 0.108, 0.027, 0.108, 0.027, 0.1],
            sigma_x: [0.2, 1.5],
            sigma_y: [0.2, 1.5],
            rotate_angle: [-3.1416, 3.1416],
            beta_gaussian: [0.5, 4],
            beta_plateau: [1, 2],
            sigma_x_step: 0.02,
            sigma_y_step: 0.02,
            rotate_angle_step: 0.31416,
            beta_gaussian_step: 0.05,
            beta_plateau_step: 0.1,
            omega_step: 0.0628},
          keys: ['lq'],
        }
      - {type: RandomResize, params: {
            resize_mode_prob: [0.3, 0.4, 0.3],  # up, down, keep
            resize_scale: [0.3, 1.2],
            resize_opt: ['bilinear', 'area', 'bicubic'],
            resize_prob: [1/3, 1/3, 1/3],
            resize_step: 0.03,
            is_size_even: True
          },
          keys: ['lq']
        }
      - {type: RandomNoise, params: {
            noise_type: ['gaussian', 'poisson'],
            noise_prob: [0.5, 0.5],
            gaussian_sigma: [1, 25],
            gaussian_gray_noise_prob: 0.4,
            poisson_scale: [0.05, 2.5],
            poisson_gray_noise_prob: 0.4,
            gaussian_sigma_step: 0.1,
            poisson_scale_step: 0.005
          },
        keys: ['lq']
        }
      - {type: RandomJPEGCompression, params: {quality: [30,95], quality_step: 3}, keys: ['lq']}
      - {type: DegradationsWithShuffle, degradations: [{type: RandomVideoCompression, params: {
                                                        codec: ['libx264', 'h264', 'mpeg4'],
                                                        codec_prob: [1/3, 1/3, 1/3],
                                                        bitrate: [!!float 1e4, !!float 1e5]},
                                                      keys: ['lq']},
                                                      [{type: RandomResize, params: {
                                                          target_size: [64,64],
                                                          resize_opt: ['bilinear', 'area', 'bicubic'],
                                                          resize_prob: [1/3, 1/3, 1/3]},
                                                        },
                                                        {type: RandomBlur, params: {
                                                          prob: 0.8,
                                                          kernel_size: [7, 9, 11, 13, 15, 17, 19, 21],
                                                          kernel_list: ['sinc'],
                                                          kernel_prob: [1],
                                                          omega: [1.046867, 3.1416],
                                                          omega_step: 0.0628}
                                                        }]],
          keys: ['lq']}
      - {type: Quantize, keys: ['lq']}
      - {type: Collect, keys: ['lq', 'gt', 'gt_unsharp']}
    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 2
    dataset_enlarge_ratio: 200
    prefetch_mode: ~

# network structures
network_g:
  type: RealViformer
  num_feat: 48
  num_blocks: [2,3,4,1]
  spynet_path: ~ 
  heads: [1,2,4]
  ffn_expansion_factor: 2.66
  merge_head: 2
  merge_masked: false
  bias: False
  LayerNorm_type: BiasFree
  ch_compress: true
  squeeze_factor: [4, 4, 4]
  masked: true

network_d:
  type: UNetDiscriminatorWithSpectralNorm
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  pretrain_network_g: ~ 
  pretrain_network_d: ~
  strict_load_g: True
  resume_state: ~ 

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 5e-5
    # weight_decay: !!float 1e-4
    betas: [0.9, 0.999]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    # weight_decay: 0
    betas: [0.9, 0.999]

  scheduler:
    type: MultiStepRestartLR
    milestones: [150000]
    gamma: 1
    # eta_min: !!float 1e-6 # 1e-5

  total_iter: 150000
  warmup_iter: -1  # no warm up
  fix_flow: ~

  # losses
  pixel_opt:
    type: CharbonnierLoss
    loss_weight: 1.0
    reduction: mean
  grad_opt:
    type: SSIMLoss
    loss_weight: 0.1
    # patch_size: 16
    # reduction: mean
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1  # before relu ## more layers in RealBasicVSR
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 1.0
    style_weight: 0
    criterion: l1
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 5e-2
  is_use_sharpened_gt_in_pixel: False
  is_use_sharpened_gt_in_grad: False
  is_use_sharpened_gt_in_percep: False
  is_use_sharpened_gt_in_gan: False

# # validation settings
# val:
#   val_freq: !!float 5e3
#   save_img: false

#   metrics:
#     psnr: # metric name, can be arbitrary
#       type: calculate_psnr
#       crop_border: 0
#       test_y_channel: false
#     ssim: # metric name, can be arbitrary
#       type: calculate_ssim
#       crop_border: 0
#       test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 2.5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: True
